JavaLoaderFactory.cfc
---------------------

A factory CFC to provide a facade to server-scoped instance(s) of [JavaLoader](http://javaloader.riaforge.org/). The [JavaLoader docs advise](http://www.compoundtheory.com/javaloader/docs/#Memory_Issues_424911073034682_) that instances be stored in the _server_ scope. This factory abstracts this initialization work.

## API Overview

The `init()` method accepts one optional argument `lockTimeout`, which specifies the lock timeout for creating a JavaLoader instance (with `getJavaLoader()`); the default is 60 (seconds).

The `getJavaLoader()` method's first three arguments match JavaLoader's `init()` arguments (`required array loadPaths, boolean loadColdFusionClassPath, string parentClassLoader`); the first argument, `loadPaths`, is the only required.

The `expandLoadPaths` argument to `getJavaLoader()` defaults to `true`, which allows you to pass a `loadPaths` array of paths relative to your Web root or CFML mappings, and they will be expanded with `expandPath()` before being passed to the JavaLoader `init()` method to create your JavaLoader instance. You can pass `expandLoadPaths = false` if you'd like to pass an array of absolute/expanded paths for the `loadPaths` argument.

The `serverKey` argument to `getJavaLoader()` allows you to, optionally, specify the server scope key that will hold the JavaLoader instance being created/retrieved. By default, a sensible key is generated by hashing a JSON serialization of the JavaLoader `init()` arguments, so multiple instances can safely live in the server scope with unique keys.

## Examples

Example [ColdSpring](http://coldspringframework.org/) bean factory configuration (assumes JavaLoaderFactory.cfc in Web root and /opencsv is a CFML mapping or in Web root):

	<bean id="javaLoaderFactory" class="JavaLoaderFactory" />

	<bean id="javaLoader" factory-bean="javaLoaderFactory" factory-method="getJavaLoader">
		<constructor-arg name="loadPaths">
			<list>
				<value>/opencsv/opencsv-2.2.jar</value>
			</list>
		</constructor-arg>
	</bean>

Example usage (assumes above ColdSpring bean factory has been initilized and is accessible via `getBeanFactory()`):

	javaLoader = getBeanFactory().getBean( 'javaLoader' );

	csvReader = javaLoader.create( 'au.com.bytecode.opencsv.CSVReader' );

